name: ceed
vertexShader: |
  #version 330 core
  layout (location = 0) in vec3 position;
  layout (location = 2) in vec3 barycentric;
  layout (location = 3) in vec3 normals;

  uniform mat4 MVPMatrix;

  out vec3 Barycentric;
  out vec3 Normal;

  void main(void) {
    gl_Position = MVPMatrix * vec4(position, 1.);
    Barycentric = barycentric;
    Normal = normalize((MVPMatrix * vec4(normals, 1)).xyz);
  }
fragmentShader: |
  #version 330 core
  precision mediump float;

  in vec3 Normal;
  in vec3 Barycentric;

  uniform float StrokeSize;

  out vec4 finalColour;

  void main(void) {
    if(Barycentric.x < StrokeSize || Barycentric.y < StrokeSize || Barycentric.z < StrokeSize) {
      finalColour = vec4( 0.5 * Normal + 0.5, 1.0 );
    } else {
      discard;
    }
  }
