name: normalised
attributes:
  - position
  - normals
uniforms:
  - Pmatrix
  - Vmatrix
  - Mmatrix
vertexShader: |
  #version 330 core

  layout (location = 0) in vec3 position;
  layout (location = 3) in vec3 normals;

  uniform mat4 Pmatrix;
  uniform mat4 Vmatrix;
  uniform mat4 Mmatrix;

  out vec3 vNormal;

  void main(void) {
    mat4 mvp = (Pmatrix * Vmatrix) * Mmatrix;
    gl_Position = mvp * vec4(position, 1.);
    vNormal = (mvp * vec4(normals, 1)).xyz;
  }
fragmentShader: |
  #version 330 core
  precision mediump float;

  in vec3 vNormal;

  out vec4 finalColor;

  void main(void) {
    finalColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );
  }
